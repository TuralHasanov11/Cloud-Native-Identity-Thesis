apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog-deployment
  labels:
    app: catalog
  namespace: thesis
spec:
  # ingressClassName: web-ingress
  replicas: 1
  selector:
    matchLabels:
      app: catalog
  template:
    metadata:
      labels:
        app: catalog
    securityContext:
      runAsNonRoot: true
    spec:
      containers:
      - name: catalog.api
        image: turalhasanov/thesis/catalog-api:latest
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        ports:
        - containerPort: 5102
        - containerPort: 5103
---
apiVersion: v1
kind: Service
metadata:
  name: catalog-service
  namespace: thesis
  labels:
    app: catalog
spec:
  type: LoadBalancer
  selector:
    app: catalog
  ports:
  - name: http-5102
    protocol: TCP
    port: 5102
    targetPort: 5102
  - name: http-5103
    protocol: TCP
    port: 5103
    env:
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: "http://seq:5341/ingest/otlp/v1/traces"
    - name: OTEL_EXPORTER_OTLP_PROTOCOL
      value: "http/protobuf"
    - name: OTEL_EXPORTER_OTLP_HEADERS
      value: "X-Seq-ApiKey=XMdIiVvcRbsIkFf2U7DQ"
    targetPort: 5103
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: web-ingress
#   namespace: modularmonolith
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/use-regex: 'true'
# spec:
#   rules:
#   - host: modularmonolith.local
#     http:
#       paths:
#       - path: /?(.*)
#         pathType: Prefix
#         backend:
#           service:
#             name: web-service
#             port:
#               number: 80